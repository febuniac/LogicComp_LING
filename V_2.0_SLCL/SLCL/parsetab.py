
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftNOTleftPLUSMINUSleftMULTDIVleftEXPMODrightUMINUSrightUPLUSAND ASSIGN BIT_AND BIT_NEG BIT_OR BIT_XOR BREAK CLOSE_KEY CLOSE_PAREN COLON COMMA DIFF DIV ELSE EQUAL_TO EXP FALSE FOR FUNCTION GREATER_THAN GREATER_THAN_EQUAL IF KEYWORD LESS_THAN LESS_THAN_EQUAL MINUS MINUS_EQ MOD MULT MULT_EQ NEWLINE NOT NUM_FLOAT NUM_INT OPEN_KEY OPEN_PAREN OR PLUS PLUS_EQ PRINT RETURN SEMICOLON STRING TRUE VARIABLE WHILE\n    statement_list : statement\n                   | statement_list statement\n    \n    statement : variable\n              | expression\n              | if_statement\n    \n    statement : BREAK SEMICOLON\n    \n    statement : PRINT COLON OPEN_PAREN arguments CLOSE_PAREN SEMICOLON\n    \n     statement : variable PLUS_EQ expression SEMICOLON\n               | variable MINUS_EQ expression SEMICOLON\n               | variable MULT_EQ expression SEMICOLON\n\n    \n    statement : WHILE COLON expression OPEN_KEY statement_list CLOSE_KEY\n    \n    statement : FOR COLON OPEN_KEY statement_list CLOSE_KEY\n    \n    statement : FUNCTION variable OPEN_PAREN arguments CLOSE_PAREN OPEN_KEY statement_list CLOSE_KEY\n              | FUNCTION variable OPEN_KEY statement_list CLOSE_KEY\n    \n    statement : RETURN expression SEMICOLON\n    \n    expression : variable OPEN_PAREN arguments CLOSE_PAREN\n    statement : variable OPEN_PAREN arguments CLOSE_PAREN SEMICOLON\n\n    \n    variable : VARIABLE\n    \n    expression : expression PLUS expression %prec PLUS\n                | expression MINUS expression %prec MINUS\n                | expression MULT expression %prec MULT\n                | expression DIV expression %prec DIV\n                | expression EXP expression %prec EXP\n                | expression MOD expression %prec MOD\n    \n    expression : expression BIT_AND expression\n            | expression BIT_OR expression\n            | expression BIT_XOR expression\n    \n    expression : PLUS expression %prec UPLUS\n               | MINUS expression %prec UMINUS\n               | BIT_NEG expression\n               | NOT expression\n    \n    expression : OPEN_PAREN expression CLOSE_PAREN\n    \n    expression : variable ASSIGN assignable SEMICOLON\n    \n    if_statement : IF COLON expression OPEN_KEY statement_list CLOSE_KEY \n    \n    if_statement : IF COLON expression OPEN_KEY statement_list CLOSE_KEY ELSE COLON OPEN_KEY statement_list CLOSE_KEY \n    \n    if_statement : IF COLON expression OPEN_KEY statement_list CLOSE_KEY ELSE COLON if_statement \n    \n    primitive : NUM_INT\n              | NUM_FLOAT\n              | STRING\n              | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    boolean : expression EQUAL_TO expression\n            | expression DIFF expression\n            | expression GREATER_THAN expression\n            | expression GREATER_THAN_EQUAL expression\n            | expression LESS_THAN expression\n            | expression LESS_THAN_EQUAL expression\n            | expression AND expression\n            | expression OR expression\n    \n    assignable : primitive\n               | expression\n    \n    arguments : arguments COMMA expression\n              | expression\n              |\n    \n    expression : primitive\n               | STRING\n               | variable\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[6,6,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,6,6,-15,-8,-9,-10,-16,-33,6,6,6,6,-17,-16,6,-12,-14,6,-7,-11,6,-34,6,-13,6,-36,6,-35,]),'PRINT':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[7,7,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,7,7,-15,-8,-9,-10,-16,-33,7,7,7,7,-17,-16,7,-12,-14,7,-7,-11,7,-34,7,-13,7,-36,7,-35,]),'WHILE':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[9,9,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,9,9,-15,-8,-9,-10,-16,-33,9,9,9,9,-17,-16,9,-12,-14,9,-7,-11,9,-34,9,-13,9,-36,9,-35,]),'FOR':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[10,10,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,10,10,-15,-8,-9,-10,-16,-33,10,10,10,10,-17,-16,10,-12,-14,10,-7,-11,10,-34,10,-13,10,-36,10,-35,]),'FUNCTION':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[11,11,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,11,11,-15,-8,-9,-10,-16,-33,11,11,11,11,-17,-16,11,-12,-14,11,-7,-11,11,-34,11,-13,11,-36,11,-35,]),'RETURN':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[12,12,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,12,12,-15,-8,-9,-10,-16,-33,12,12,12,12,-17,-16,12,-12,-14,12,-7,-11,12,-34,12,-13,12,-36,12,-35,]),'VARIABLE':([0,1,2,3,4,5,8,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[13,13,-1,-3,-4,-5,13,13,13,-18,13,13,13,13,-56,-39,-37,-38,-40,-41,-42,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-6,-58,13,-28,-29,-30,-31,13,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,13,-32,13,13,13,13,-15,-8,-9,-10,-16,13,-33,13,13,13,13,-17,-16,13,-12,-14,13,-7,-11,13,-34,13,-13,13,-36,13,-35,]),'PLUS':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,56,57,58,59,60,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,108,109,110,111,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[14,14,-1,-3,32,-5,14,14,-18,14,14,14,14,-56,-39,-37,-38,-40,-41,-42,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,32,-58,14,32,-28,-29,32,32,14,32,32,32,32,-56,32,-39,-19,-20,-21,-22,-23,-24,32,32,32,32,32,32,32,32,32,32,32,14,-32,14,32,14,14,14,-15,32,-8,-9,-10,-16,14,-33,14,14,14,14,-17,32,-16,14,-12,-14,14,-7,-11,14,-34,14,-13,14,-36,14,-35,]),'MINUS':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,56,57,58,59,60,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,108,109,110,111,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[15,15,-1,-3,33,-5,15,15,-18,15,15,15,15,-56,-39,-37,-38,-40,-41,-42,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-6,33,-58,15,33,-28,-29,33,33,15,33,33,33,33,-56,33,-39,-19,-20,-21,-22,-23,-24,33,33,33,33,33,33,33,33,33,33,33,15,-32,15,33,15,15,15,-15,33,-8,-9,-10,-16,15,-33,15,15,15,15,-17,33,-16,15,-12,-14,15,-7,-11,15,-34,15,-13,15,-36,15,-35,]),'BIT_NEG':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[16,16,-1,-3,-4,-5,16,16,-18,16,16,16,16,-56,-39,-37,-38,-40,-41,-42,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-6,-58,16,-28,-29,-30,-31,16,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,16,-32,16,16,16,16,-15,-8,-9,-10,-16,16,-33,16,16,16,16,-17,-16,16,-12,-14,16,-7,-11,16,-34,16,-13,16,-36,16,-35,]),'NOT':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[17,17,-1,-3,-4,-5,17,17,-18,17,17,17,17,-56,-39,-37,-38,-40,-41,-42,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-6,-58,17,-28,-29,-30,-31,17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,17,-32,17,17,17,17,-15,-8,-9,-10,-16,17,-33,17,17,17,17,-17,-16,17,-12,-14,17,-7,-11,17,-34,17,-13,17,-36,17,-35,]),'OPEN_PAREN':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[8,8,-1,30,-4,-5,8,8,-18,8,8,8,8,-56,-39,-37,-38,-40,-41,-42,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-6,88,90,8,93,-28,-29,-30,-31,8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,8,-32,8,8,8,8,-15,-8,-9,-10,-16,8,-33,8,8,8,8,-17,-16,8,-12,-14,8,-7,-11,8,-34,8,-13,8,-36,8,-35,]),'STRING':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[19,19,-1,-3,-4,-5,19,19,-18,19,19,19,19,-56,-39,-37,-38,-40,-41,-42,-2,19,19,19,19,70,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,-58,19,-28,-29,-30,-31,19,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,19,-32,19,19,19,19,-15,-8,-9,-10,-16,19,-33,19,19,19,19,-17,-16,19,-12,-14,19,-7,-11,19,-34,19,-13,19,-36,19,-35,]),'IF':([0,1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,94,95,97,98,99,100,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,126,127,128,129,130,],[20,20,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,20,20,-15,-8,-9,-10,-16,-33,20,20,20,20,-17,-16,20,-12,-14,20,-7,-11,20,-34,20,-13,20,20,-36,20,-35,]),'NUM_INT':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[21,21,-1,-3,-4,-5,21,21,-18,21,21,21,21,-56,-39,-37,-38,-40,-41,-42,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-6,-58,21,-28,-29,-30,-31,21,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,21,-32,21,21,21,21,-15,-8,-9,-10,-16,21,-33,21,21,21,21,-17,-16,21,-12,-14,21,-7,-11,21,-34,21,-13,21,-36,21,-35,]),'NUM_FLOAT':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[22,22,-1,-3,-4,-5,22,22,-18,22,22,22,22,-56,-39,-37,-38,-40,-41,-42,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-6,-58,22,-28,-29,-30,-31,22,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,22,-32,22,22,22,22,-15,-8,-9,-10,-16,22,-33,22,22,22,22,-17,-16,22,-12,-14,22,-7,-11,22,-34,22,-13,22,-36,22,-35,]),'TRUE':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[24,24,-1,-3,-4,-5,24,24,-18,24,24,24,24,-56,-39,-37,-38,-40,-41,-42,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,-58,24,-28,-29,-30,-31,24,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,24,-32,24,24,24,24,-15,-8,-9,-10,-16,24,-33,24,24,24,24,-17,-16,24,-12,-14,24,-7,-11,24,-34,24,-13,24,-36,24,-35,]),'FALSE':([0,1,2,3,4,5,8,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,105,106,108,109,110,113,114,115,117,118,119,120,121,122,123,125,127,128,129,130,],[25,25,-1,-3,-4,-5,25,25,-18,25,25,25,25,-56,-39,-37,-38,-40,-41,-42,-2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-6,-58,25,-28,-29,-30,-31,25,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,25,-32,25,25,25,25,-15,-8,-9,-10,-16,25,-33,25,25,25,25,-17,-16,25,-12,-14,25,-7,-11,25,-34,25,-13,25,-36,25,-35,]),'$end':([1,2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,95,97,98,99,100,102,110,113,115,117,119,120,122,125,128,130,],[0,-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,-15,-8,-9,-10,-16,-33,-17,-16,-12,-14,-7,-11,-34,-13,-36,-35,]),'CLOSE_KEY':([2,3,4,5,13,18,19,21,22,23,24,25,26,49,52,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,95,97,98,99,100,102,106,108,110,113,114,115,117,118,119,120,122,123,125,128,129,130,],[-1,-3,-4,-5,-18,-56,-39,-37,-38,-40,-41,-42,-2,-6,-58,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,-15,-8,-9,-10,-16,-33,115,117,-17,-16,120,-12,-14,122,-7,-11,-34,125,-13,-36,130,-35,]),'PLUS_EQ':([3,13,],[27,-18,]),'MINUS_EQ':([3,13,],[28,-18,]),'MULT_EQ':([3,13,],[29,-18,]),'ASSIGN':([3,13,52,],[31,-18,31,]),'MULT':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,34,-18,-56,-39,-37,-38,-40,-41,-42,34,-58,34,-28,-29,34,34,34,34,34,34,-56,34,-39,34,34,-21,-22,-23,-24,34,34,34,34,34,34,34,34,34,34,34,-32,34,34,-16,-33,34,-16,]),'DIV':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,35,-18,-56,-39,-37,-38,-40,-41,-42,35,-58,35,-28,-29,35,35,35,35,35,35,-56,35,-39,35,35,-21,-22,-23,-24,35,35,35,35,35,35,35,35,35,35,35,-32,35,35,-16,-33,35,-16,]),'EXP':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,36,-18,-56,-39,-37,-38,-40,-41,-42,36,-58,36,-28,-29,36,36,36,36,36,36,-56,36,-39,36,36,36,36,-23,-24,36,36,36,36,36,36,36,36,36,36,36,-32,36,36,-16,-33,36,-16,]),'MOD':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,37,-18,-56,-39,-37,-38,-40,-41,-42,37,-58,37,-28,-29,37,37,37,37,37,37,-56,37,-39,37,37,37,37,-23,-24,37,37,37,37,37,37,37,37,37,37,37,-32,37,37,-16,-33,37,-16,]),'BIT_AND':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,38,-18,-56,-39,-37,-38,-40,-41,-42,38,-58,38,-28,-29,38,-31,38,38,38,38,-56,38,-39,-19,-20,-21,-22,-23,-24,38,38,38,38,38,38,38,38,38,38,38,-32,38,38,-16,-33,38,-16,]),'BIT_OR':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,39,-18,-56,-39,-37,-38,-40,-41,-42,39,-58,39,-28,-29,39,-31,39,39,39,39,-56,39,-39,-19,-20,-21,-22,-23,-24,39,39,39,39,39,39,39,39,39,39,39,-32,39,39,-16,-33,39,-16,]),'BIT_XOR':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,40,-18,-56,-39,-37,-38,-40,-41,-42,40,-58,40,-28,-29,40,-31,40,40,40,40,-56,40,-39,-19,-20,-21,-22,-23,-24,40,40,40,40,40,40,40,40,40,40,40,-32,40,40,-16,-33,40,-16,]),'EQUAL_TO':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,41,-18,-56,-39,-37,-38,-40,-41,-42,41,-58,41,-28,-29,41,-31,41,41,41,41,-56,41,-39,-19,-20,-21,-22,-23,-24,41,41,41,41,41,41,41,41,41,41,41,-32,41,41,-16,-33,41,-16,]),'DIFF':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,42,-18,-56,-39,-37,-38,-40,-41,-42,42,-58,42,-28,-29,42,-31,42,42,42,42,-56,42,-39,-19,-20,-21,-22,-23,-24,42,42,42,42,42,42,42,42,42,42,42,-32,42,42,-16,-33,42,-16,]),'GREATER_THAN':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,43,-18,-56,-39,-37,-38,-40,-41,-42,43,-58,43,-28,-29,43,-31,43,43,43,43,-56,43,-39,-19,-20,-21,-22,-23,-24,43,43,43,43,43,43,43,43,43,43,43,-32,43,43,-16,-33,43,-16,]),'GREATER_THAN_EQUAL':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,44,-18,-56,-39,-37,-38,-40,-41,-42,44,-58,44,-28,-29,44,-31,44,44,44,44,-56,44,-39,-19,-20,-21,-22,-23,-24,44,44,44,44,44,44,44,44,44,44,44,-32,44,44,-16,-33,44,-16,]),'LESS_THAN':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,45,-18,-56,-39,-37,-38,-40,-41,-42,45,-58,45,-28,-29,45,-31,45,45,45,45,-56,45,-39,-19,-20,-21,-22,-23,-24,45,45,45,45,45,45,45,45,45,45,45,-32,45,45,-16,-33,45,-16,]),'LESS_THAN_EQUAL':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,46,-18,-56,-39,-37,-38,-40,-41,-42,46,-58,46,-28,-29,46,-31,46,46,46,46,-56,46,-39,-19,-20,-21,-22,-23,-24,46,46,46,46,46,46,46,46,46,46,46,-32,46,46,-16,-33,46,-16,]),'AND':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,47,-18,-56,-39,-37,-38,-40,-41,-42,47,-58,47,-28,-29,47,-31,47,47,47,47,-56,47,-39,-19,-20,-21,-22,-23,-24,47,47,47,47,47,47,47,47,47,47,47,-32,47,47,-16,-33,47,-16,]),'OR':([3,4,13,18,19,21,22,23,24,25,51,52,56,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,100,102,111,113,],[-58,48,-18,-56,-39,-37,-38,-40,-41,-42,48,-58,48,-28,-29,48,-31,48,48,48,48,-56,48,-39,-19,-20,-21,-22,-23,-24,48,48,48,48,48,48,48,48,48,48,48,-32,48,48,-16,-33,48,-16,]),'SEMICOLON':([6,13,18,19,21,22,23,24,25,52,56,57,58,59,60,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,100,102,112,113,],[49,-18,-56,-39,-37,-38,-40,-41,-42,-58,95,-28,-29,-30,-31,97,98,99,102,-51,-52,-39,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,110,-33,119,-16,]),'COLON':([7,9,10,20,124,],[50,53,54,61,126,]),'CLOSE_PAREN':([13,18,19,21,22,23,24,25,30,51,52,57,58,59,60,65,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,102,103,104,107,111,113,],[-18,-56,-39,-37,-38,-40,-41,-42,-55,89,-58,-28,-29,-30,-31,100,-54,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-55,-32,-55,-55,-33,112,113,116,-53,-16,]),'OPEN_KEY':([13,18,19,21,22,23,24,25,52,54,55,57,58,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,102,113,116,126,],[-18,-56,-39,-37,-38,-40,-41,-42,-58,92,94,-28,-29,-30,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-32,105,109,-33,-16,121,127,]),'COMMA':([13,18,19,21,22,23,24,25,30,52,57,58,59,60,65,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,102,103,104,107,111,113,],[-18,-56,-39,-37,-38,-40,-41,-42,-55,-58,-28,-29,-30,-31,101,-54,-19,-20,-21,-22,-23,-24,-25,-26,-27,-43,-44,-45,-46,-47,-48,-49,-50,-55,-32,-55,-55,-33,101,101,101,-53,-16,]),'ELSE':([122,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,92,94,105,109,121,127,],[1,106,108,114,118,123,129,]),'statement':([0,1,92,94,105,106,108,109,114,118,121,123,127,129,],[2,26,2,2,2,26,26,2,26,26,2,26,2,26,]),'variable':([0,1,8,11,12,14,15,16,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,61,88,90,92,93,94,101,105,106,108,109,114,118,121,123,127,129,],[3,3,52,55,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,3,52,3,52,3,3,3,3,3,3,3,3,3,3,]),'expression':([0,1,8,12,14,15,16,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,61,88,90,92,93,94,101,105,106,108,109,114,118,121,123,127,129,],[4,4,51,56,57,58,59,60,62,63,64,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,91,96,66,66,4,66,4,111,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,1,92,94,105,106,108,109,114,118,121,123,126,127,129,],[5,5,5,5,5,5,5,5,5,5,5,5,128,5,5,]),'primitive':([0,1,8,12,14,15,16,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,61,88,90,92,93,94,101,105,106,108,109,114,118,121,123,127,129,],[18,18,18,18,18,18,18,18,18,18,18,18,68,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'boolean':([0,1,8,12,14,15,16,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,61,88,90,92,93,94,101,105,106,108,109,114,118,121,123,127,129,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'arguments':([30,88,90,93,],[65,103,104,107,]),'assignable':([31,],[67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',20),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',21),
  ('statement -> variable','statement',1,'p_statement','parser.py',32),
  ('statement -> expression','statement',1,'p_statement','parser.py',33),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> BREAK SEMICOLON','statement',2,'p_break','parser.py',40),
  ('statement -> PRINT COLON OPEN_PAREN arguments CLOSE_PAREN SEMICOLON','statement',6,'p_print_statement','parser.py',47),
  ('statement -> variable PLUS_EQ expression SEMICOLON','statement',4,'p_compound_operations','parser.py',54),
  ('statement -> variable MINUS_EQ expression SEMICOLON','statement',4,'p_compound_operations','parser.py',55),
  ('statement -> variable MULT_EQ expression SEMICOLON','statement',4,'p_compound_operations','parser.py',56),
  ('statement -> WHILE COLON expression OPEN_KEY statement_list CLOSE_KEY','statement',6,'p_while_loop','parser.py',63),
  ('statement -> FOR COLON OPEN_KEY statement_list CLOSE_KEY','statement',5,'p_for_loop','parser.py',70),
  ('statement -> FUNCTION variable OPEN_PAREN arguments CLOSE_PAREN OPEN_KEY statement_list CLOSE_KEY','statement',8,'p_function_declaration','parser.py',77),
  ('statement -> FUNCTION variable OPEN_KEY statement_list CLOSE_KEY','statement',5,'p_function_declaration','parser.py',78),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_return','parser.py',90),
  ('expression -> variable OPEN_PAREN arguments CLOSE_PAREN','expression',4,'p_function_call','parser.py',97),
  ('statement -> variable OPEN_PAREN arguments CLOSE_PAREN SEMICOLON','statement',5,'p_function_call','parser.py',98),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',106),
  ('expression -> expression PLUS expression','expression',3,'p_arithmetics_op','parser.py',113),
  ('expression -> expression MINUS expression','expression',3,'p_arithmetics_op','parser.py',114),
  ('expression -> expression MULT expression','expression',3,'p_arithmetics_op','parser.py',115),
  ('expression -> expression DIV expression','expression',3,'p_arithmetics_op','parser.py',116),
  ('expression -> expression EXP expression','expression',3,'p_arithmetics_op','parser.py',117),
  ('expression -> expression MOD expression','expression',3,'p_arithmetics_op','parser.py',118),
  ('expression -> expression BIT_AND expression','expression',3,'p_booleans_op','parser.py',124),
  ('expression -> expression BIT_OR expression','expression',3,'p_booleans_op','parser.py',125),
  ('expression -> expression BIT_XOR expression','expression',3,'p_booleans_op','parser.py',126),
  ('expression -> PLUS expression','expression',2,'p_unary_operation','parser.py',133),
  ('expression -> MINUS expression','expression',2,'p_unary_operation','parser.py',134),
  ('expression -> BIT_NEG expression','expression',2,'p_unary_operation','parser.py',135),
  ('expression -> NOT expression','expression',2,'p_unary_operation','parser.py',136),
  ('expression -> OPEN_PAREN expression CLOSE_PAREN','expression',3,'p_paren_expression','parser.py',143),
  ('expression -> variable ASSIGN assignable SEMICOLON','expression',4,'p_attribution','parser.py',151),
  ('if_statement -> IF COLON expression OPEN_KEY statement_list CLOSE_KEY','if_statement',6,'p_ifstatement','parser.py',158),
  ('if_statement -> IF COLON expression OPEN_KEY statement_list CLOSE_KEY ELSE COLON OPEN_KEY statement_list CLOSE_KEY','if_statement',11,'p_if_elsestatement','parser.py',165),
  ('if_statement -> IF COLON expression OPEN_KEY statement_list CLOSE_KEY ELSE COLON if_statement','if_statement',9,'p_if_else_ifstatement','parser.py',172),
  ('primitive -> NUM_INT','primitive',1,'p_primitive','parser.py',180),
  ('primitive -> NUM_FLOAT','primitive',1,'p_primitive','parser.py',181),
  ('primitive -> STRING','primitive',1,'p_primitive','parser.py',182),
  ('primitive -> boolean','primitive',1,'p_primitive','parser.py',183),
  ('boolean -> TRUE','boolean',1,'p_boolean','parser.py',191),
  ('boolean -> FALSE','boolean',1,'p_boolean','parser.py',192),
  ('boolean -> expression EQUAL_TO expression','boolean',3,'p_relationals_operators','parser.py',198),
  ('boolean -> expression DIFF expression','boolean',3,'p_relationals_operators','parser.py',199),
  ('boolean -> expression GREATER_THAN expression','boolean',3,'p_relationals_operators','parser.py',200),
  ('boolean -> expression GREATER_THAN_EQUAL expression','boolean',3,'p_relationals_operators','parser.py',201),
  ('boolean -> expression LESS_THAN expression','boolean',3,'p_relationals_operators','parser.py',202),
  ('boolean -> expression LESS_THAN_EQUAL expression','boolean',3,'p_relationals_operators','parser.py',203),
  ('boolean -> expression AND expression','boolean',3,'p_relationals_operators','parser.py',204),
  ('boolean -> expression OR expression','boolean',3,'p_relationals_operators','parser.py',205),
  ('assignable -> primitive','assignable',1,'p_assignable','parser.py',211),
  ('assignable -> expression','assignable',1,'p_assignable','parser.py',212),
  ('arguments -> arguments COMMA expression','arguments',3,'p_comma_separated_expr','parser.py',219),
  ('arguments -> expression','arguments',1,'p_comma_separated_expr','parser.py',220),
  ('arguments -> <empty>','arguments',0,'p_comma_separated_expr','parser.py',221),
  ('expression -> primitive','expression',1,'p_expression','parser.py',234),
  ('expression -> STRING','expression',1,'p_expression','parser.py',235),
  ('expression -> variable','expression',1,'p_expression','parser.py',236),
]
